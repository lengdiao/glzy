<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecard.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.ecard.entity.Role">
    <id column="RoleNo" jdbcType="BIGINT" property="roleNo" />
    <result column="RoleName" jdbcType="VARCHAR" property="roleName" />
    <result column="CreateUser" jdbcType="VARCHAR" property="createUser" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UpdateUser" jdbcType="VARCHAR" property="updateUser" />
    <result column="UpdateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="Version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    RoleNo, RoleName, CreateUser, CreateTime, UpdateUser, UpdateTime, Version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where RoleNo = #{roleNo,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where RoleNo = #{roleNo,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ecard.entity.Role"
  useGeneratedKeys="true" keyProperty="roleNo" keyColumn="RoleNo">
    insert into role (RoleNo, RoleName, CreateUser, 
      CreateTime, UpdateUser, UpdateTime, 
      Version)
    values (#{roleNo,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ecard.entity.Role"
  useGeneratedKeys="true" keyProperty="roleNo" keyColumn="RoleNo">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleNo != null">
        RoleNo,
      </if>
      <if test="roleName != null">
        RoleName,
      </if>
      <if test="createUser != null">
        CreateUser,
      </if>
      <if test="createTime != null">
        CreateTime,
      </if>
      <if test="updateUser != null">
        UpdateUser,
      </if>
      <if test="updateTime != null">
        UpdateTime,
      </if>
      <if test="version != null">
        Version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleNo != null">
        #{roleNo,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ecard.entity.Role">
    update role
    <set>
      <if test="roleName != null">
        RoleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CreateUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UpdateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        Version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where RoleNo = #{roleNo,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecard.entity.Role">
    update role
    set RoleName = #{roleName,jdbcType=VARCHAR},
      CreateUser = #{createUser,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      UpdateUser = #{updateUser,jdbcType=VARCHAR},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      Version = #{version,jdbcType=INTEGER}
    where RoleNo = #{roleNo,jdbcType=BIGINT}
  </update>
  <select id="selectbyRoleName" parameterType="java.lang.String" resultType="java.lang.Long">
  	select RoleNo from role where RoleName = #{roleName,jdbcType=VARCHAR}
  </select>
  <select id="selectRoleList" parameterType="java.lang.String" resultType="com.ecard.pojo.queryResult.RoleListQr">
    select 
    	RoleNo,RoleName
    from role
    where 1=1
    <if test="roleName != null and roleName !=''">
	  	and RoleName =#{roleName,jdbcType=VARCHAR} 
	  </if>
	order by RoleNo
  </select>
  <select id="selectByNo" parameterType="java.lang.Integer" 
  resultType="com.ecard.pojo.queryResult.RoleQr">
    select 
    	RoleNo,RoleName
    from role
    where RoleNo =#{roleNo,jdbcType=BIGINT}
  </select>
</mapper>